@model RSM.BOL.Models.PropertySell
    @*https://localhost:44316/PropertySell/ConfirmSale*@

<div class="col-md-6 col-xs-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>Confirm Property Sell <small>different form elements</small></h2>
            <div class="clearfix"></div>
        </div>

        <div class="x_content">
            <br />
            @using (Html.BeginForm("ConfirmSale", "PropertySell", FormMethod.Post,
                new { @class = "form-horizontal form-label-left", @id = "myForm", @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @*---PropertyID---*@


                @*---PaymentOnBooking---*@
                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentOnBooking, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PaymentOnBooking, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Payment on booking" } })
                        @Html.ValidationMessageFor(model => model.PaymentOnBooking, "", new { @class = "text-danger" })
                    </div>
                </div>





                @*---PossessionCharges---*@
                <div class="form-group">
                    @Html.LabelFor(model => model.PossessionCharges, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PossessionCharges, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PossessionCharges, "", new { @class = "text-danger" })
                    </div>
                </div>

                //---TotalCostOfProperty---
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalCostOfProperty, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.TotalCostOfProperty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalCostOfProperty, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentPlan, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-7">
                        @Html.EnumDropDownListFor(model => model.PaymentPlan, "Choose Payment Plan", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PaymentPlan, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CornerCharges, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.CornerCharges, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CornerCharges, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DevelopmentCharges, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.DevelopmentCharges, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DevelopmentCharges, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoldDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SoldDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SoldDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PossessionDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PossessionDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PossessionDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NumberOfInstallments, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.NumberOfInstallments, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumberOfInstallments, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EntryByUser, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.EntryByUser, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EntryByUser, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CareOf, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.CareOf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CareOf, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br>
                <br>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Confirm Sale" class="btn btn-success btn-round" />
                    </div>
                </div>






            }


        </div>
    </div>
</div>
